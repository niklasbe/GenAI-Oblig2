#import "@preview/charged-ieee:0.1.2": ieee

#show: ieee.with(
  title: "AIrbnb: Exploring AI-Generated Virtual Properties in Digital Marketplaces",
  abstract: [
    This paper presents AIrbnb, a proof-of-concept platform that leverages large language models to generate immersive virtual property listings. We explore the intersection of artificial intelligence and digital marketplaces, demonstrating how AI can create engaging, fictional yet plausible travel destinations. Our implementation combines Preact for the frontend, Bun for the backend, and the OpenAI API for content generation, showcasing the potential of AI in creative content generation for e-commerce platforms.
  ],
  authors: (
    (
      name: "Niklas Berby",
      organization: [Høgskolen i Østfold],
      email: "niklab@hiof.no"
    ),
  ),
)

= Introduction
#par()[
  The rise of AI has created new possibilities in how we create and interact with web content. This project combines several modern technologies to create a unique property marketplace where all listings are generated by AI. The goal was to explore how AI could be used to create engaging content while learning about full-stack web development.
]

== Motivation
#par()[
  - Growing interest in full-stack web development
  - Newfound interest in using Bun as a Typescript runtime
  - Educational value in exploring AI capabilities in creative content generation
]

= System Design

== Architecture
#par()[
  Detailed description of the system architecture, including:
  - Frontend implementation using React
  - Backend services using Bun
  - Integration with OpenAI API
  - Static asset management
]

== Property Generation
#par()[
  Analysis of the prompt engineering approach:
  - Structured prompt design
  - Consistency in generated content
  - Balance between creativity and plausibility
]

== User Interface
#par()[
  Discussion of the user interface design:
  - Responsive layout considerations
  - Loading state management
  - Image presentation
  - Interactive elements
]

= Implementation

== Frontend Development
#par()[
  Technical details of the React implementation:
  - Component architecture
  - State management
  - Performance optimizations
  - Responsive design
]

== Backend Services
#par()[
  Details of the Bun server implementation:
  - API endpoints
  - Static file serving
  - Error handling
  - Security considerations
]

== AI Integration
#par()[
  Discussion of the OpenAI API integration:
  - Model selection and configuration
  - Response processing
  - Error handling
  - Cost optimization
]

= Evaluation

== Performance Metrics
#par()[
  Analysis of system performance:
  - Response times
  - Generation quality
  - Resource utilization
]

== User Experience
#par()[
  Assessment of user interaction:
  - Interface usability
  - Content engagement
  - Feature effectiveness
]

== Limitations
#par()[
  Discussion of current limitations:
  - Generation constraints
  - Technical boundaries
  - Scaling considerations
]

= Conclusion
#par()[
  Summary of contributions and findings:
  - Key achievements
  - Lessons learned
  - Broader implications for AI in digital marketplaces
]